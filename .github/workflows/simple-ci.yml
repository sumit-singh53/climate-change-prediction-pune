name: Simple CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Basic Tests
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install basic dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas numpy scikit-learn requests aiohttp
    
    - name: Test Python syntax
      run: |
        python -m py_compile src/*.py
        echo "‚úÖ All Python files compile successfully"
    
    - name: Test basic imports
      run: |
        python -c "
        import sys
        sys.path.append('src')
        
        # Test configuration
        try:
            from config import PUNE_LOCATIONS, MODEL_CONFIG, REALTIME_CONFIG
            print(f'‚úÖ Configuration loaded: {len(PUNE_LOCATIONS)} locations')
        except Exception as e:
            print(f'‚ùå Config import failed: {e}')
            sys.exit(1)
        
        print('‚úÖ All basic tests passed!')
        "
    
    - name: Validate project structure
      run: |
        echo "Validating project structure..."
        test -f README.md && echo "‚úÖ README.md exists"
        test -f requirements.txt && echo "‚úÖ requirements.txt exists"
        test -f LICENSE && echo "‚úÖ LICENSE exists"
        test -d src && echo "‚úÖ src directory exists"
        test -f src/config.py && echo "‚úÖ config.py exists"
        test -f src/realtime_data_collector.py && echo "‚úÖ realtime_data_collector.py exists"
        test -f src/advanced_ml_models.py && echo "‚úÖ advanced_ml_models.py exists"
        test -f src/realtime_dashboard.py && echo "‚úÖ realtime_dashboard.py exists"
        echo "‚úÖ Project structure validation complete"

  docker-test:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        docker build -t climate-prediction:test .
        echo "‚úÖ Docker image built successfully"
    
    - name: Test Docker image
      run: |
        docker run --rm climate-prediction:test python -c "print('‚úÖ Docker container runs successfully')"

  success:
    name: All Tests Passed
    runs-on: ubuntu-latest
    needs: [test, docker-test]
    
    steps:
    - name: Success message
      run: |
        echo "üéâ All tests passed successfully!"
        echo "‚úÖ Python syntax validation"
        echo "‚úÖ Import tests"
        echo "‚úÖ Project structure validation"
        echo "‚úÖ Docker build test"
        echo "Repository is ready for deployment! üöÄ"